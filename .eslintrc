{
	"root": true,
	"parser": "@typescript-eslint/parser",
	"plugins": [
		"@typescript-eslint",
		"jsx-a11y",
		"prettier",
		"react",
		"simple-import-sort",
		"import",
		"react-hooks",
		"sort-class-members",
		"formatjs"
	],
	"ignorePatterns": ["public/*.js"],
	"extends": [
		"plugin:@typescript-eslint/eslint-recommended",
		"plugin:@typescript-eslint/recommended",
		"airbnb-typescript",
		"plugin:react/recommended",
		"plugin:jsx-a11y/recommended",
		"plugin:prettier/recommended",
		"plugin:react-hooks/recommended"
	],
	"parserOptions": {
		"ecmaVersion": 2019,
		// Allows for the parsing of modern ECMAScript features
		"sourceType": "module",
		// Allows for the use of imports
		"ecmaFeatures": {
			"jsx": true,
			"legacyDecorators": true
			// Allows for the parsing of JSX
		},
		"project": "./tsconfig.json"
	},
	"env": {
		"es6": true,
		"node": true
	},
	"settings": {
		"react": {
			"version": "detect"
		},
		"node": {
			"tryExtensions": [".ts", ".tsx", ".scss", ".css"]
		},
		"import/extensions": [".js", ".jsx", ".ts", ".tsx"]
	},
	"rules": {
		"indent": [
			2,
			"tab",
			{
				"SwitchCase": 1,
				"VariableDeclarator": 1
			}
		],
		"no-tabs": 0,
		"react/jsx-indent": [2, "tab"],
		"react/jsx-indent-props": [2, "tab"],
		"react/jsx-filename-extension": [
			1,
			{
				"extensions": [".ts", ".tsx"]
			}
		],
		"prettier/prettier": ["error"],
		"react/destructuring-assignment": 0,
		"import/imports-first": "off",
		"import/newline-after-import": "error",
		"react/jsx-no-undef": [2, { "allowGlobals": true }],
		"react/jsx-props-no-spreading": "off",
		"react/jsx-uses-vars": "error",
		"react/jsx-uses-react": "off",
		"react/react-in-jsx-scope": "off",
		"react/no-unescaped-entities": "off",
		"react-hooks/rules-of-hooks": "error",
		"react-hooks/exhaustive-deps": "warn",
		"import/prefer-default-export": "off",
		"no-plusplus": "off",
		"no-underscore-dangle": "off",
		"sort-imports": "off", // Required by simple-import-sort
		"import/order": "off", // Required by simple-import-sort
		"simple-import-sort/imports": "error",
		"radix": "off",
		"react/no-children-prop": "off",
		"sort-class-members/sort-class-members": [
			2,
			{
				"order": [
					"[static-properties]",
					"[static-methods]",
					"[conventional-private-properties]",
					"constructor",
					"[lifecycle]",
					"[handle-methods]",
					"[on-methods]",
					"[get-methods]",
					"[set-methods]",
					"[update-methods]",
					"[methods]",
					"[conventional-private-methods]",
					"[render-methods]",
					"render"
				],
				"groups": {
					"on-methods": [{ "name": "/on.+/", "type": "method" }],
					"get-methods": [{ "name": "/get.+/", "type": "method" }],
					"set-methods": [{ "name": "/set.+/", "type": "method" }],
					"handle-methods": [{ "name": "/handle.+/", "type": "method" }],
					"update-methods": [{ "name": "/update.+/", "type": "method" }],
					"render-methods": [{ "name": "/render.+/", "type": "method" }],
					"lifecycle": [
						"displayName",
						"propTypes",
						"contextTypes",
						"childContextTypes",
						"mixins",
						"statics",
						"defaultProps",
						"constructor",
						"getDefaultProps",
						"state",
						"getInitialState",
						"getChildContext",
						"getDerivedStateFromProps",
						"componentWillMount",
						"UNSAFE_componentWillMount",
						"componentDidMount",
						"componentWillReceiveProps",
						"UNSAFE_componentWillReceiveProps",
						"shouldComponentUpdate",
						"componentWillUpdate",
						"UNSAFE_componentWillUpdate",
						"getSnapshotBeforeUpdate",
						"componentDidUpdate",
						"componentDidCatch",
						"componentWillUnmount"
					]
				},
				"accessorPairPositioning": "getThenSet"
			}
		],
		"@typescript-eslint/indent": ["error", "tab"],
		"@typescript-eslint/naming-convention": [
			"error",
			{
				"selector": "variable",
				"format": ["camelCase", "PascalCase", "UPPER_CASE"],
				"leadingUnderscore": "allow",
				"trailingUnderscore": "allow"
			},
			{
				"selector": "function",
				"format": ["camelCase", "PascalCase"]
			},
			{
				"selector": "typeLike",
				"format": ["PascalCase"]
			}
		],
		"formatjs/no-offset": "error"
	},
	"overrides": [
		{
			"files": ["**/*.tsx", "**/*.ts"],
			"rules": {
				"react/prop-types": "off",
				"react/require-default-props": "off",
				"@typescript-eslint/no-shadow": "off",
				"@typescript-eslint/no-unused-vars": "error",
				"no-unused-vars": "off",
				"import/extensions": "off"
			}
		},
		{
			"files": ["**/*.js"],
			"rules": {
				"react/prop-types": "off",
				"@typescript-eslint/no-shadow": "off",
				"@typescript-eslint/no-unused-vars": "error",
				"@typescript-eslint/no-var-requires": "off",
				"no-unused-vars": "off"
			}
		}
	],
	"globals": {
		"JSX": "readonly",
		"FunctionState": "readonly",
		"window": "readonly",
		"document": "readonly",
		"localStorage": "readonly",
		"FormData": "readonly",
		"FileReader": "readonly",
		"Blob": "readonly",
		"navigator": "readonly",
		"es6": "readonly",
		"jest": "readonly",
		"node": "readonly",
		"Event": "readonly",
        "React": "readonly"
	}
}
